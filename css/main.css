/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}body{margin:0;padding:0}.container{max-width:1200px;width:100%;height:100%;margin:0 auto}.clearfix::after{content:'';display:block;clear:both}.header_section{max-width:100%;height:688px;background-size:cover;background-position:center;background-repeat:no-repeat;text-align:center}.logo{float:left}.bgimg{background-image:url("../img/Headerimg.png");max-width:100%;height:688px;background-size:cover;background-position:center;background-repeat:no-repeat}.menu{margin:0;margin-top:32px;padding:0;float:right;font-family:'Lato', sans-serif}.menu ul{margin:0;padding:0}.menu ul li{display:inline-block}.menu ul li a{color:white;text-decoration:none;font-size:16px;margin:0 35px;font-weight:bold;transition:.4s ease-in-out}.menu ul li a:hover{color:#fed52f;transition:.4s ease-in-out}h1{margin:0}.learn_more{border-radius:4px;padding:21px 44px;background-color:#fed52f;text-decoration:none;color:black;text-transform:uppercase;font-size:16px;font-weight:bold;font-family:'Lato', sans-serif;transition:.4s ease-in-out}.learn_more:hover{background-color:#FCAE28;transition:.4s ease-in-out}.flax{width:100%;height:444px;display:flex;justify-content:center;align-items:center;color:white}.text h1{font-size:60px;font-weight:bold}.text h2{margin-bottom:53px;font-family:Lato sans-serif;font-size:18px;font-weight:bold}.foter{max-width:100%;width:100%;height:238px}.blackLogo{float:left;padding-top:40px}.Foter_Nav ul{margin:0;padding:0;width:438px;height:116px;list-style:none;padding-top:53px;-moz-column-count:2;-webkit-column-count:2;column-count:2}.Foter_Nav ul li{margin-bottom:31px;margin-right:122px}.Foter_Nav ul li a{text-decoration:none;font-size:14px;font-weight:bold;color:black}.flex_cont{display:flex;justify-content:space-between}.form{float:right}.form #email{width:271px;height:45px;border:1px solid #e5e5e5;background-color:white;margin-right:21px;padding-left:14px}.form #submit{border-radius:4px;background-color:#fed52f;padding:16px 32px;border:none;outline:none;cursor:pointer}.join{padding-top:53px;font-size:14px;font-weight:bold}.dev_yers{float:left;color:#7C7C7C}.developed{float:right;color:#7C7C7C}.geek{color:#7C7C7C}.two{max-width:100%;width:100%;height:547px;background-color:white}.what{margin:0;font-size:40px;font-weight:bold;text-align:center;padding-top:70px}.process{list-style:none;margin:0;margin-top:62px;padding:0;display:flex;text-align:center}.process li{padding:0 20px}.process h3{font-family:'Lato', sans-serif;font-size:24px;font-weight:bold}.process p{font-size:16px;font-weight:bold;font-family:"Lato - Thin" sans-serif}.About{max-width:100%;width:100%;height:544px;background-color:#fbf7f4;position:relative}.About .dwellings{position:absolute;top:0;right:0}.About .description{width:455px}.About .description h2{margin:0;padding-top:58px;font-size:40px;font-weight:bold;margin-bottom:66px}.About .description p{font-size:16px;font-weight:bold;margin-bottom:35px}.rmore{color:#fed52f;font-family:Lato sans-serif;font-size:16px;font-weight:bold;text-transform:uppercase}.candidats{max-width:100%;width:100%;height:734px;background-color:white}.candidats h2{text-align:center;font-size:40px;font-weight:bold;margin:0;margin-bottom:70px;padding-top:61px}.SEE{text-align:center}.SEE a{color:#fed52f;font-family:Lato sans-serif;font-size:16px;font-weight:bold;text-transform:uppercase}.family_list{list-style:none;display:flex;justify-content:space-between;margin:0;padding:0;margin-bottom:38px}.family_list li{width:368px;height:413px;box-shadow:0 0 20px 1px rgba(0,0,0,0.07);border-radius:6px}.family_list li h3{padding-left:20px}.family_list li p{padding:17px 20px}.block{position:absolute;left:0;bottom:0;right:0;top:0;background:rgba(254,213,47,0.95);opacity:0;border-radius:5px 5px 0 0;display:flex;justify-content:center;align-items:center;transition:.5s ease-in-out}.block:hover{transition:.5s ease-in-out}.image{position:relative;width:368px;height:218px;transition:.5s ease-in-out}.image:hover .block{opacity:1;transition:.5s ease-in-out}.explore{color:#fed52f;font-family:Lato sans-serif;background-color:white;border-radius:4px;padding:10px 24px;text-decoration:none;font-size:16px;font-weight:bold;border:3px solid transparent;transition:.5s ease-in-out}.explore:hover{transition:.5s ease-in-out;border:3px solid #676158;color:#F19321}.Testimonials{max-width:100%;width:100%;height:542px;background-color:#fbf7f4}.Testimonials h2{text-align:center;color:#090500;font-family:"Lato - Heavy";font-size:40px;font-weight:bold;padding-top:60px;margin:0}.temonlist{list-style:none;display:flex;margin:0;margin-bottom:38px;margin-top:69px;padding:0;justify-content:space-between}.temonlist .cit{width:410px;height:222px;background-color:white;color:#3a2405;font-family:"Lato - Thin";font-size:16px;padding:20px;float:right;font-weight:bold}.photo_men::before{content:url("../img/photomen.png");padding-right:30px}.photo_girl::before{content:url("../img/photogirl.png");padding-right:30px}.emon{font-size:18px;font-family:"Lato - Thin";font-weight:100}.emon .emonial{color:#fed52f;font-weight:bold;font-family:Lato sans-serif}.build{background-image:url("../img/build_home.png");max-width:100%;height:566px;background-size:cover;background-position:center;background-repeat:no-repeat}.build h2{margin:0;padding:0;padding-top:146px;font-family:"Lato - Heavy";font-size:60px;font-weight:bold}.home_descript{width:429px}.home_descript p{font-family:Lato sans-serif;font-size:18px;font-weight:bold;margin-top:45px;margin-bottom:63px}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
